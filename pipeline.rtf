{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red255\green0\blue0;\red253\green154\blue0;\red255\green0\blue255;
\red19\green37\blue209;}
\margl1440\margr1440\vieww15220\viewh14500\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \

\b What the algorithm does\
for frame 1:
\b0 \
\
search widely to narrow down search range\
	find best XYZ for R = 0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 	\cf3 optionally: use xy values from another date and use search range specific leash (xMargin, yMargin; default 50 pix)\cf0 \
	\cf4 figure showing maximum correlation vs z in frame001/zFit.pdf \cf0 \
	find XY outliers using robust planar fit, use inliers to fit XYZ\
		outliers are defined as points with residuals greater than 8*robustSTD\
	find best R in (-10:.5:10) for Z = best fit Z, XY = best fit XY \'b1 10 pix\
	\cf4 figure showing maximum correlation vs angle in frame001/rFit.pdf \cf0 \
	fit XY with robust planar fit\
	use inliers from XY fit to fit R with a plane, fit Z with local piecewise function (loess)\
	\cf4 figure showing fits and outliers in searchRangeFig.pdf\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 	\cf4 save matrix of fits for future use in xyzrSearchRange.mat\
	\cf0 \
use XYZR fit values to define center point of search range\
	R -2 : 0.25 : 2 around fit\
	Z -6 : 6 around fit\
	XY search within 20 pixels\
		XY location must have 80% overlap with reference\
within search range, compute all correlation values, find best\
	keep at most 400 
\i positive
\i0  correlation values \
	\cf4 save kept values in frame001/bockXXX.mat\
	difference image showing block - reference match in blockDiffs.gif \
	side by side comparison of the block and reference match in blockMontage.gif\
\cf0 \
\

\b for frame N+1:
\b0 \
\
fit XYZR values from frame N\
	same fitting as above\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 	outliers are noted\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 use XYZR fit values to define center point of search range for frame N+1 as above\
compute all correlation values within search range and find best as above \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf5 computes in ~8 minutes (about 9.5 hrs for 70 frames)\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\

\b to run everything at once on the cluster - use findAndReportPeaks.sh or findAndReportPeaksWrapper.sh\
\
after computing:\
	
\b0 run xyzrcBallStickFig to get 3d scatter of block registration for a given frame, or run warpGif to get a movie\
	run createPairPlots to see 6 plots of correlation peaks \
	run fitXYZRSearchRange with a frame\'92s xyzr peak as input to get the search range for the following frame\
\
}